[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EVR-5086 Assignment 1 - Calculus Review",
    "section": "",
    "text": "Introduction\nI learned that there are various ways that I can create and execute Python chunks in R Studio (Velásquez 2021). Although EVR-5086 class is being taught using python, I have advanced skills in R that I hope will be complementary to the course. I am also fond of sharing science on GitHub. I have learned how GitHub pages combined with Quarto and R Studio are an extraordinary resource for developing and maintaining lab notebooks. In order to get better at using these tools and the reproducibility and accessibility of my future research, I have created a html quarto book and pdf to show my work associated with the course assignments.\n\n\nSet Up\nI started by creating a GitHub account (arios101-fiu) and a GitHub repository with a gitignore and readme.md (EVR-5086-Assignment1). I cloned the repository into R Studio, thereby creating a R project. I copied in a _quarto.yml and index file from another project. I simplified the index file and inserted a reference to create a new reference.bib. I updated the yml, rendered, committed and pushed. Next, I turned on GitHub pages and updated the URLs in the yml and repository. On to the assignment…\n\n\n\n\nVelásquez, Isabella. 2021. “Posit.” https://www.posit.co/.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "polynomial.html",
    "href": "polynomial.html",
    "title": "1  Polynomial Plot",
    "section": "",
    "text": "Observations and the limitations of the numerical derivative. One method is an instantaneous change (associated with he tangent line. The other is an average rate of change between two points.\n\n# Define variables\na &lt;- 1\nn &lt;- 1\nb &lt;- 1\np &lt;- 2\nc &lt;- 1\nq &lt;- 3\n\n# Create x vectors from -1 to 1\nx &lt;- seq(from = -1, to = 1, by = 0.1)\n\n# Calculate the value of y for each value of x\ny &lt;- (a * (x^n)) + (b * (x^p)) + (c * (x^q))\n\n# Calculate the analytical derivatives for each value of x\ndy_dx &lt;- (a * n * (x^(n - 1))) + (b * p * (x^(p - 1))) + (c * q * (x^(q-1)))\n\n# Calculate the numerical derivatives\ndeltay &lt;- diff(y)\ndeltax &lt;- diff(x)\ndeltay_deltax &lt;- deltay / deltax\n\n# For plotting purposes, derive the midpoint\ndeltax_vec &lt;- x[-length(x)] + deltax/2\n\n# Build dataframe for plot\n\n# Plot the analytically derivative as a solid line and the numerical derivative as open symbols",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Polynomial Plot</span>"
    ]
  },
  {
    "objectID": "tripole.html",
    "href": "tripole.html",
    "title": "2  Solve the 2-D Laplace in Excel",
    "section": "",
    "text": "I created a 29 by 29 grid of the 2-D Laplace Equation. I included three internal “boundary values”; one high value of 4 and two low values of -2 and -3. I allowed excel to iteratively calculate with 10,000 iterations and a minimum change of 0.0001. Saving as a CSV file, surrounded by explicit zeros, the dimensions of my data were 30 by 30. Additionally, I rounded to four significant digits to see if it would mean that the stagnation areas would be more pronounced.\n\n3 Read in and plot contours\n\n\n4 Plot streamlines",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Solve the 2-D Laplace in Excel</span>"
    ]
  }
]